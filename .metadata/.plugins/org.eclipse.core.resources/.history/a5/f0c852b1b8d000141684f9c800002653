import java.awt.AlphaComposite;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;

import net.miginfocom.swing.MigLayout;



public class CopyOfTestGUI implements ActionListener {
	
	private JFrame frame;
	
	private JPanel panel2;

	String dbLesson;
	
	
	
	
	
	ArrayList<JPanel> panel = new ArrayList<>();
	ArrayList<String> questions = new ArrayList<>();
	ArrayList<String> answers = new ArrayList<>();
	ArrayList<ButtonGroup>  qGroup  = new ArrayList<>();
	ArrayList<JRadioButton> qChoice = new ArrayList<>();
	JPanel testPanel = new JPanel(new MigLayout());
	
	
	
	
	
	
	
	CardLayout card = new CardLayout();
	
	public CopyOfTestGUI(String currentLesson) {
		this.dbLesson = currentLesson;
	}
	
	public void run() throws SQLException {
		
		newElements();
		styleElements();
		addElements();
		
	}
	
	
	public void newElements() throws SQLException {
		
		frame = new JFrame();
		panel2 = new JPanel();


    	panel2.setLayout(new MigLayout("insets 0"));
    
    	
    	Connection conn = null;
	    String getConn = "jdbc:mysql://localhost/programmingassistant";
	    
		try {
				
			Class.forName("com.mysql.jdbc.Driver");	        
			conn = DriverManager.getConnection(getConn, "root", "");  
		    
		} catch (ClassNotFoundException | SQLException e) { 
			e.printStackTrace(); 
		}

    	
    	
    	/*-- -----------------------
	 	Get Lesson Questions
	--------------------------*/
	
    String query = "SELECT * FROM questions where lessonID ='" + dbLesson +"' ORDER BY rand()";
    Statement statement = (Statement) conn.createStatement(); 
    ResultSet results = statement.executeQuery(query);

    int qCount = 0;
    int cCount = 0;
    
	while(results.next()) {
		
		questions.add(results.getString("questionName"));
		answers.add(results.getString("questionAnswer"));
		panel.add(new JPanel());
		JPanel qCurrent = panel.get(qCount);
		//qCurrent.setBackground(Color.RED);
		qCurrent.setLayout(new MigLayout("wrap 1, align center"));
		
		qGroup.add(new ButtonGroup());
		ButtonGroup gCurrent = qGroup.get(qCount);
		
		// Get Options Query
		query = "SELECT * FROM options WHERE questionID='" + results.getString("questionID") + "' order by rand()";
    	statement = (Statement) conn.createStatement(); 
    	ResultSet rs = statement.executeQuery(query);

    	// Question Title
    	JLabel qName = new JLabel(results.getString("questionName"));
    	qName.setFont(new Font("Lucida Grande",Font.PLAIN, 18));

		qCurrent.add(qName, "align center");
    	
		while(rs.next()) {
		
			qChoice.add(new JRadioButton(rs.getString("optionsName")));
	    	JRadioButton rCurrent = qChoice.get(cCount);
	    	rCurrent.setFont(new Font("Lucida Grande",Font.PLAIN, 18));
	    	rCurrent.setActionCommand(rs.getString("optionsName"));
	    	gCurrent.add(rCurrent);
			
	    	rCurrent.setSelectedIcon(null);
	    	
	    	
	    	qCurrent.add(rCurrent);
	    	cCount++;

		}
		

    	
    	
    	
    	
		testPanel.add(qCurrent, "w 98%, wrap, gapy 20, top");
		
		qCount++;
		
	}
		
	
	
    	
	panel2.add(testPanel);
	
		
		
		
		
		
	}
	
	
	public void addElements() {
		
		ComponentResizer cr = new ComponentResizer();
		cr.registerComponent(frame);
		cr.setSnapSize(new Dimension(10, 10));

		ComponentDraggable cd = new ComponentDraggable();
		cd.setDraggable(panel2, frame);
		
    	
    	
		
		JButton submit = new JButton("submit");
		submit.addActionListener(this);
		
		panel2.add(submit);
	

		frame.setUndecorated(true);
		frame.setContentPane(new ShadowPane());
        frame.setBackground(new Color(0,0,0,0)); 
		frame.add(panel2);
		frame.setSize(700, 800);
		frame.setLocationRelativeTo(null);
		frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		frame.setVisible(true);
		
	}
	
	
	public void styleElements() {
		
		// Add Logo Icon
	
    	ArrayList<String> controlsIcons = new ArrayList<>();
    	controlsIcons.add("assets/img/exitIcon.png");
    	controlsIcons.add("assets/img/miniIcon.png");
    	controlsIcons.add("assets/img/maxiIcon.png");
    	controlsIcons.add("assets/img/settingsIcon.png");
    	
    	int controlsCount = 0;

		
		
    	panel2.setBackground(new Color(0xf8f8f8));
    
	}

	
	public void actionPerformed(ActionEvent e) {
		
		  JButton source = (JButton) e.getSource();
		
		  
		  
		  MainGUI.frame.setVisible(true);
		  frame.dispose();
		  
		  
		  
		  
		  
		  
		  
	}
	
	
	public class ShadowPane extends JPanel {

		public ShadowPane() {
			setLayout(new BorderLayout());
	        setOpaque(false);
	        setBackground(Color.BLACK);
	        setBorder(new EmptyBorder(12, 12, 2, 2));
	    }

	    public Dimension getPreferredSize() {
	    	return new Dimension(200, 200);
	    }

	    protected void paintComponent(Graphics g) {
	    	super.paintComponent(g);
	    	Graphics2D g2d = (Graphics2D) g.create();
	    	g2d.setComposite(AlphaComposite.SrcOver.derive(0.2f));
	    	g2d.fillRect(10, 10, getWidth(), getHeight());
	    	g2d.dispose();
	    }
	  
	}
	
	
	
	

}
